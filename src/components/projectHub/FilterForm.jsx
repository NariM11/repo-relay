import { Heading, Checkbox, Stack, Box } from '@chakra-ui/react';
import ClearFiltersButton from './ClearFiltersButton';
import { useDispatch } from 'react-redux';
import { toggleTagFilter, clearFilters } from '../projectCards/ProjectCardStore'
import React, { useState } from 'react'

export default function FilterForm() {
    const dispatch = useDispatch()

    // Currently setting up states for checked tags to enable the clear all filters button
    //   Current setup may not be the best solution when there are more tags
    //   Setting via bool array indices could definitely lead to confusion
    const [checkedTags, setCheckedTags] = useState({
        difficulty: [false, false, false],
        project: [false, false, false],
        tech: [false, false, false],
      });
    
    const clearAllTags = () => {
        setCheckedTags({
          difficulty: [false, false, false],
          project: [false, false, false],
          tech: [false, false, false],
        })
        dispatch(clearFilters())
    }

    // function generated by Gemini on June 5th, 2024
    //   prompt: 'help me combine my tag change states to prevent infinite re-rendering'
    const handleTagChange = (category, index, tag) => {
    setCheckedTags((prevCheckedTags) => ({
        ...prevCheckedTags,
        [category]: [
        ...prevCheckedTags[category].slice(0, index),
        !prevCheckedTags[category][index],
        ...prevCheckedTags[category].slice(index + 1),
        ],
    }));
    dispatch(toggleTagFilter(tag))
    };

    return (
        <Box pl='5%' textAlign='left'>
            <Box pt='10px' pb='20px'>
                <ClearFiltersButton onClick={() => clearAllTags}/>
            </Box>

            <Heading size='md' pb='10px'>Difficulty</Heading>
            <Stack direction='column' pb='20px'>
                <Checkbox 
                    isChecked={checkedTags.difficulty[0]}
                    onChange={() => handleTagChange('difficulty', 0, 'Beginner')}
                    >Beginner
                </Checkbox>
                <Checkbox
                    isChecked={checkedTags.difficulty[1]}
                    onChange={() => handleTagChange('difficulty', 1, 'Intermediate')}
                    >Intermediate
                </Checkbox>
                <Checkbox
                    isChecked={checkedTags.difficulty[2]}
                    onChange={() => handleTagChange('difficulty', 2, 'Advanced')}
                    >Advanced
                </Checkbox>
            </Stack>

            <Heading size='md' pb='10px'>Project Tags</Heading>
            <Stack direction='column' pb='20px'>
                <Checkbox
                    isChecked={checkedTags.project[0]}
                    onChange={() => handleTagChange('project', 0, 'AI/ML')}
                    >AI/ML
                </Checkbox>
                <Checkbox
                    isChecked={checkedTags.project[1]}
                    onChange={() => handleTagChange('project', 1, 'Web Dev')}
                    >Web Dev
                </Checkbox>
                <Checkbox
                    isChecked={checkedTags.project[2]}
                    onChange={() => handleTagChange('project', 2, 'Automation')}
                    >Automation
                </Checkbox>
            </Stack>

            <Heading size='md' pb='10px'>Tech Tags</Heading>
            <Stack direction='column' pb='20px'>
                <Checkbox
                    isChecked={checkedTags.tech[0]}
                    onChange={() => handleTagChange('tech', 0, 'JavaScript')}
                    >JavaScript
                </Checkbox>
                <Checkbox 
                    isChecked={checkedTags.tech[1]}
                    onChange={() => handleTagChange('tech', 1, 'Python')}
                    >Python
                </Checkbox>
                <Checkbox 
                    isChecked={checkedTags.tech[2]}
                    onChange={() => handleTagChange('tech', 2, 'React')}
                    >React
                </Checkbox>
            </Stack>
        </Box>
    );
}
